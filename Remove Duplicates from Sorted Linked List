/*** Given the head of a sorted linked list
**** delete all duplicates such that each element appears only once.
**** Return the linked list sorted as well. ***/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* deleteDuplicates(struct ListNode* head){
    struct ListNode *p1 = head;
    struct ListNode *p2 = head;
    
    if(p1 == NULL || p2 == NULL)
        return NULL;
    
    if(p2->next == NULL)
        return head;
    
    p2 = p2->next;
    while(p2 != NULL){
    
        if(p2->next == NULL && p1->val == p2->val){
            p1->next = NULL;
            break;
        }
        
        if(p2->next == NULL && p1->val != p2->val)
            break;
            
        if(p1->val == p2->val){
            p1->next = p2->next;
            p2 = p2->next;
        }
        else{
             p2 = p2->next;
             p1 = p1->next;
        }
    }
    return head;
}
